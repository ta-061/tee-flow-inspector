# Prompt for function ta2tee_algo_id
As a program analyst, when performing taint analysis, can the function `ta2tee_algo_id` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
static TEE_Result ta2tee_algo_id(uint32_t param, uint32_t *algo)
```

# Prompt for function ta2tee_key_size
As a program analyst, when performing taint analysis, can the function `ta2tee_key_size` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
static TEE_Result ta2tee_key_size(uint32_t param, uint32_t *key_size)
```

# Prompt for function ta2tee_mode_id
As a program analyst, when performing taint analysis, can the function `ta2tee_mode_id` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
static TEE_Result ta2tee_mode_id(uint32_t param, uint32_t *mode)
```

# Prompt for function alloc_resources
As a program analyst, when performing taint analysis, can the function `alloc_resources` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
static TEE_Result alloc_resources(void *session, uint32_t param_types,
```

# Prompt for function set_aes_key
As a program analyst, when performing taint analysis, can the function `set_aes_key` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
static TEE_Result set_aes_key(void *session, uint32_t param_types,
```

# Prompt for function reset_aes_iv
As a program analyst, when performing taint analysis, can the function `reset_aes_iv` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
static TEE_Result reset_aes_iv(void *session, uint32_t param_types,
```

# Prompt for function cipher_buffer
As a program analyst, when performing taint analysis, can the function `cipher_buffer` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
static TEE_Result cipher_buffer(void *session, uint32_t param_types,
```

# Prompt for function TA_CreateEntryPoint
As a program analyst, when performing taint analysis, can the function `TA_CreateEntryPoint` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
TEE_Result TA_CreateEntryPoint(void)
```

# Prompt for function TA_DestroyEntryPoint
As a program analyst, when performing taint analysis, can the function `TA_DestroyEntryPoint` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
void TA_DestroyEntryPoint(void)
```

# Prompt for function TA_OpenSessionEntryPoint
As a program analyst, when performing taint analysis, can the function `TA_OpenSessionEntryPoint` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
TEE_Result TA_OpenSessionEntryPoint(uint32_t __unused param_types,
```

# Prompt for function TA_CloseSessionEntryPoint
As a program analyst, when performing taint analysis, can the function `TA_CloseSessionEntryPoint` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
void TA_CloseSessionEntryPoint(void *session)
```

# Prompt for function TA_InvokeCommandEntryPoint
As a program analyst, when performing taint analysis, can the function `TA_InvokeCommandEntryPoint` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
TEE_Result TA_InvokeCommandEntryPoint(void *session,
```

# Prompt for function main
As a program analyst, when performing taint analysis, can the function `main` be used as a sink? If yes, indicate parameter positions to check in the form `(function_name; param_index)`. Answer `no` if not.

Function implementation:
```c
int main(int argc, char* argv[])
```

