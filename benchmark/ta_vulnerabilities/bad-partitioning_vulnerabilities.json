{
  "analysis_date": "2025-10-09T08:13:43.305763",
  "analysis_time_seconds": 566.8028192520142,
  "analysis_time_formatted": "9.4 minutes",
  "llm_provider": "openai",
  "analysis_mode": "hybrid",
  "rag_enabled": false,
  "statistics": {
    "total_flows_analyzed": 14,
    "flows_with_vulnerabilities": 6,
    "total_vulnerability_lines": 18,
    "total_structural_risk_lines": 38,
    "total_detections_before_consolidation": 69,
    "total_lines_after_consolidation": 56,
    "consolidation_rate": "18.8%",
    "severity_distribution": {
      "critical": 0,
      "high": 16,
      "medium": 2,
      "low": 0
    },
    "cwe_distribution": {
      "weak_input_validation": 5,
      "CWE-125/126: Out-of-bounds read/write or insecure memory copy between TA-private and REE-visible memory": 1,
      "CWE-125/Other: improper handling of memory copy between TA-private/REE-visible buffers": 2,
      "CWE-125/126 - Out-of-bounds read/write with tainted sizes": 4,
      "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)": 5,
      "CWE-125: Out-of-bounds Read/Write": 1
    },
    "rule_distribution": {
      "weak_input_validation": 24,
      "other": 16,
      "shared_memory_overwrite": 11
    },
    "execution_time_seconds": 566.8028192520142,
    "llm_calls": 39,
    "cache_hits": 13,
    "cache_partial_hits": 13,
    "cache_misses": 1,
    "cache_hit_rate": "92.9%",
    "token_usage": {},
    "retries": 0,
    "retry_successes": 0
  },
  "total_vulnerability_lines": 18,
  "vulnerabilities": [
    {
      "vulnerability_id": "VULN-0001",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 137,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "vulnerability_types": [
        "weak_input_validation"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "tainted input used as format source into REE-visible buffer without explicit bounds reasoning"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "output",
          "produce",
          "snprintf"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated parameters fed into format strings",
          "propagation_path": [
            "TA_InvokeCommandEntryPoint -> produce @ file:line 137",
            "produce @ file:line 137"
          ],
          "sink": "snprintf into REE-visible buffers"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted format string and/or input used in snprintf without bounds checks"
          ],
          "attack_scenario": "format string controlled by attacker leading to potential buffer overflow or data leakage",
          "impact": "possible memory corruption or information disclosure in REE-visible memory"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce @ file:line 137",
          "recommendation": "validate/limit snprintf destination size and input lengths; avoid unchecked format strings"
        }
      ],
      "decision_rationales": [
        "Any snprintf call receiving tainted data as part of the format or as data to be formatted into a REE-visible buffer constitutes a clear weak-input-validation risk due to potential bounds/overflow issues."
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0002",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 143,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "vulnerability_types": [
        "weak_input_validation"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "format string with tainted components into REE-visible buffer; potential overflow risk"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "output",
          "produce",
          "snprintf"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated parameters fed into format strings",
          "propagation_path": [
            "TA_InvokeCommandEntryPoint -> produce @ file:line 137",
            "produce @ file:line 137"
          ],
          "sink": "snprintf into REE-visible buffers"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted format string and/or input used in snprintf without bounds checks"
          ],
          "attack_scenario": "format string controlled by attacker leading to potential buffer overflow or data leakage",
          "impact": "possible memory corruption or information disclosure in REE-visible memory"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce @ file:line 137",
          "recommendation": "validate/limit snprintf destination size and input lengths; avoid unchecked format strings"
        }
      ],
      "decision_rationales": [
        "Any snprintf call receiving tainted data as part of the format or as data to be formatted into a REE-visible buffer constitutes a clear weak-input-validation risk due to potential bounds/overflow issues."
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0003",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 144,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "vulnerability_types": [
        "weak_input_validation"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "second snprintf with tainted sources into REE-visible buffer; bounds uncertain"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "output",
          "produce",
          "snprintf"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated parameters fed into format strings",
          "propagation_path": [
            "TA_InvokeCommandEntryPoint -> produce @ file:line 137",
            "produce @ file:line 137"
          ],
          "sink": "snprintf into REE-visible buffers"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted format string and/or input used in snprintf without bounds checks"
          ],
          "attack_scenario": "format string controlled by attacker leading to potential buffer overflow or data leakage",
          "impact": "possible memory corruption or information disclosure in REE-visible memory"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce @ file:line 137",
          "recommendation": "validate/limit snprintf destination size and input lengths; avoid unchecked format strings"
        }
      ],
      "decision_rationales": [
        "Any snprintf call receiving tainted data as part of the format or as data to be formatted into a REE-visible buffer constitutes a clear weak-input-validation risk due to potential bounds/overflow issues."
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0004",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 147,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "vulnerability_types": [
        "weak_input_validation"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "formatting from tainted data into REE-visible buffer after prior operations"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "output",
          "produce",
          "snprintf"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated parameters fed into format strings",
          "propagation_path": [
            "TA_InvokeCommandEntryPoint -> produce @ file:line 137",
            "produce @ file:line 137"
          ],
          "sink": "snprintf into REE-visible buffers"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted format string and/or input used in snprintf without bounds checks"
          ],
          "attack_scenario": "format string controlled by attacker leading to potential buffer overflow or data leakage",
          "impact": "possible memory corruption or information disclosure in REE-visible memory"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce @ file:line 137",
          "recommendation": "validate/limit snprintf destination size and input lengths; avoid unchecked format strings"
        }
      ],
      "decision_rationales": [
        "Any snprintf call receiving tainted data as part of the format or as data to be formatted into a REE-visible buffer constitutes a clear weak-input-validation risk due to potential bounds/overflow issues."
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0005",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 148,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "vulnerability_types": [
        "weak_input_validation"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "tainted data used in printf-like call into REE-visible memory"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "output",
          "produce",
          "snprintf"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated parameters fed into format strings",
          "propagation_path": [
            "TA_InvokeCommandEntryPoint -> produce @ file:line 137",
            "produce @ file:line 137"
          ],
          "sink": "snprintf into REE-visible buffers"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted format string and/or input used in snprintf without bounds checks"
          ],
          "attack_scenario": "format string controlled by attacker leading to potential buffer overflow or data leakage",
          "impact": "possible memory corruption or information disclosure in REE-visible memory"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce @ file:line 137",
          "recommendation": "validate/limit snprintf destination size and input lengths; avoid unchecked format strings"
        }
      ],
      "decision_rationales": [
        "Any snprintf call receiving tainted data as part of the format or as data to be formatted into a REE-visible buffer constitutes a clear weak-input-validation risk due to potential bounds/overflow issues."
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0006",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 175,
      "consolidated": true,
      "detection_count": 1,
      "severity": "medium",
      "confidence_level": "medium",
      "primary_vulnerability_type": "CWE-125/126: Out-of-bounds read/write or insecure memory copy between TA-private and REE-visible memory",
      "functions": [
        "output"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-125/126: Out-of-bounds read/write or insecure memory copy between TA-private and REE-visible memory"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "TA-private data copied into REE-visible buffer without validated bounds"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "output",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "key (TA-private stack) -> params[1].memref.buffer (REE-visible)",
          "propagation_path": [
            "output@file:line 171-176 -> TA_MemMove at file:line 175"
          ],
          "sink": "TEE_MemMove copies key into REE-visible buffer"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "TA-private data considered sensitive in some contexts",
            "destination buffer is REE-visible"
          ],
          "attack_scenario": "Attacker observes REE-visible buffer content after call, extracting key-like data",
          "impact": "Potential exposure of TA-private data to REE"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "output@file:line 175",
          "recommendation": "Ensure source length is validated against destination capacity or avoid copying TA-private data into REE-visible buffers without sanitization"
        }
      ],
      "decision_rationales": [
        "Memory copy from TA-private data to REE-visible memory without explicit bounds/sanitization analysis constitutes a plausible information-disclosure risk."
      ],
      "severity_distribution": {
        "medium": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0007",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 208,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-125/Other: improper handling of memory copy between TA-private/REE-visible buffers",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-125/Other: improper handling of memory copy between TA-private/REE-visible buffers"
      ],
      "rule_ids": [
        "shared_memory_overwrite"
      ],
      "descriptions": [
        "tainted source str copied into REE-visible buffer with tainted size"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "produce_i0",
          "produce_i2",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "params[0].value.a / tainted inputs to produce_i2 propagate into local buffer str via tainted copies",
          "propagation_path": [
            "params[2].memref.buffer/size2 -> for str initialization (line 204-206)",
            "str -> TEE_MemMove(str, params[3].memref.buffer, size3) (line 208)",
            "str -> TEE_MemMove(str, params[2].memref.buffer, size2) (line 212)"
          ],
          "sink": "TEE_MemMove writes from tainted str into REE-visible buffers with tainted sizes"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted inputs influence copy sizes",
            "destination buffers are REE-visible",
            "no sufficient bounds sanitization on the copy paths"
          ],
          "attack_scenario": "malformed input allows overflowing str into REE-visible buffers, potentially leaking or corrupting memory",
          "impact": "possible data leakage or memory corruption in REE-visible buffers"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce_i2:204-206",
          "recommendation": "ensure size2/size3 do not exceed allocated buffer of str and destination buffers"
        },
        {
          "type": "memory_copy_validation",
          "location": "produce_i2:208-212",
          "recommendation": "validate boundaries for both source and destination before memmove"
        }
      ],
      "decision_rationales": [
        "Direct tainted data is copied into REE-visible buffers without explicit per-call bounds protection; both lines exhibit in-line memmove from tainted source to REE-visible destinations"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      }
    },
    {
      "vulnerability_id": "VULN-0008",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 212,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-125/Other: improper handling of memory copy between TA-private/REE-visible buffers",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-125/Other: improper handling of memory copy between TA-private/REE-visible buffers"
      ],
      "rule_ids": [
        "shared_memory_overwrite"
      ],
      "descriptions": [
        "tainted source str copied into REE-visible buffer with tainted size"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "produce_i0",
          "produce_i2",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "params[0].value.a / tainted inputs to produce_i2 propagate into local buffer str via tainted copies",
          "propagation_path": [
            "params[2].memref.buffer/size2 -> for str initialization (line 204-206)",
            "str -> TEE_MemMove(str, params[3].memref.buffer, size3) (line 208)",
            "str -> TEE_MemMove(str, params[2].memref.buffer, size2) (line 212)"
          ],
          "sink": "TEE_MemMove writes from tainted str into REE-visible buffers with tainted sizes"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted inputs influence copy sizes",
            "destination buffers are REE-visible",
            "no sufficient bounds sanitization on the copy paths"
          ],
          "attack_scenario": "malformed input allows overflowing str into REE-visible buffers, potentially leaking or corrupting memory",
          "impact": "possible data leakage or memory corruption in REE-visible buffers"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce_i2:204-206",
          "recommendation": "ensure size2/size3 do not exceed allocated buffer of str and destination buffers"
        },
        {
          "type": "memory_copy_validation",
          "location": "produce_i2:208-212",
          "recommendation": "validate boundaries for both source and destination before memmove"
        }
      ],
      "decision_rationales": [
        "Direct tainted data is copied into REE-visible buffers without explicit per-call bounds protection; both lines exhibit in-line memmove from tainted source to REE-visible destinations"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      }
    },
    {
      "vulnerability_id": "VULN-0009",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 227,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-125/126 - Out-of-bounds read/write with tainted sizes",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-125/126 - Out-of-bounds read/write with tainted sizes"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "tainted source used as copy length into REE-visible buffer buf3"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "produce_i0",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated params used as sizes/offsets",
          "propagation_path": [
            "params[2].memref.size -> size2 -> used as copy length to buf2",
            "params[3].memref.size -> size3 -> used as copy length to buf3",
            "str overwritten by tainted data earlier in produce_i0 and then moved"
          ],
          "sink": "TEE_MemMove lines 227, 238, 239, 246"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted lengths (size2/size3) exceed destination buffers"
          ],
          "attack_scenario": "caller-controlled lengths drive writes into REE-visible buffers via TEE_MemMove without proper bounds checks",
          "impact": "possible memory corruption or information leakage through REE-visible buffers"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce_i0/TEE_MemMove calls",
          "recommendation": "validate size against destination buffer capacities before memmove"
        }
      ],
      "decision_rationales": [
        "Multiple MEMMOVE calls receive tainted size/offset arguments and copy into REE-visible buffers without explicit bounds validation on the same path; this is a memory-safety vulnerability with high impact"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0010",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 238,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-125/126 - Out-of-bounds read/write with tainted sizes",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-125/126 - Out-of-bounds read/write with tainted sizes"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "tainted size2 used to copy into REE-visible buf2"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "produce_i0",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated params used as sizes/offsets",
          "propagation_path": [
            "params[2].memref.size -> size2 -> used as copy length to buf2",
            "params[3].memref.size -> size3 -> used as copy length to buf3",
            "str overwritten by tainted data earlier in produce_i0 and then moved"
          ],
          "sink": "TEE_MemMove lines 227, 238, 239, 246"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted lengths (size2/size3) exceed destination buffers"
          ],
          "attack_scenario": "caller-controlled lengths drive writes into REE-visible buffers via TEE_MemMove without proper bounds checks",
          "impact": "possible memory corruption or information leakage through REE-visible buffers"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce_i0/TEE_MemMove calls",
          "recommendation": "validate size against destination buffer capacities before memmove"
        }
      ],
      "decision_rationales": [
        "Multiple MEMMOVE calls receive tainted size/offset arguments and copy into REE-visible buffers without explicit bounds validation on the same path; this is a memory-safety vulnerability with high impact"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0011",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 239,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-125/126 - Out-of-bounds read/write with tainted sizes",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-125/126 - Out-of-bounds read/write with tainted sizes"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "tainted size3 used to copy into REE-visible buf3"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "produce_i0",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated params used as sizes/offsets",
          "propagation_path": [
            "params[2].memref.size -> size2 -> used as copy length to buf2",
            "params[3].memref.size -> size3 -> used as copy length to buf3",
            "str overwritten by tainted data earlier in produce_i0 and then moved"
          ],
          "sink": "TEE_MemMove lines 227, 238, 239, 246"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted lengths (size2/size3) exceed destination buffers"
          ],
          "attack_scenario": "caller-controlled lengths drive writes into REE-visible buffers via TEE_MemMove without proper bounds checks",
          "impact": "possible memory corruption or information leakage through REE-visible buffers"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce_i0/TEE_MemMove calls",
          "recommendation": "validate size against destination buffer capacities before memmove"
        }
      ],
      "decision_rationales": [
        "Multiple MEMMOVE calls receive tainted size/offset arguments and copy into REE-visible buffers without explicit bounds validation on the same path; this is a memory-safety vulnerability with high impact"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0012",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 246,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-125/126 - Out-of-bounds read/write with tainted sizes",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-125/126 - Out-of-bounds read/write with tainted sizes"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "copy of 1000 bytes from REE-private buf2 to local str without explicit bounds check"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "produce_i0",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated params used as sizes/offsets",
          "propagation_path": [
            "params[2].memref.size -> size2 -> used as copy length to buf2",
            "params[3].memref.size -> size3 -> used as copy length to buf3",
            "str overwritten by tainted data earlier in produce_i0 and then moved"
          ],
          "sink": "TEE_MemMove lines 227, 238, 239, 246"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted lengths (size2/size3) exceed destination buffers"
          ],
          "attack_scenario": "caller-controlled lengths drive writes into REE-visible buffers via TEE_MemMove without proper bounds checks",
          "impact": "possible memory corruption or information leakage through REE-visible buffers"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce_i0/TEE_MemMove calls",
          "recommendation": "validate size against destination buffer capacities before memmove"
        }
      ],
      "decision_rationales": [
        "Multiple MEMMOVE calls receive tainted size/offset arguments and copy into REE-visible buffers without explicit bounds validation on the same path; this is a memory-safety vulnerability with high impact"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    },
    {
      "vulnerability_id": "VULN-0013",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 290,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)"
      ],
      "rule_ids": [
        "shared_memory_overwrite"
      ],
      "descriptions": [
        "tainted data moved into REE-visible buffer without explicit bounds checks"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "TA-originated data (params[].memref.buffer/size, str) in input()",
          "propagation_path": [
            "CAUTION: tainted data flows into TEE_MemMove calls at lines 290, 291, 306, 307, 309"
          ],
          "sink": "TEE_MemMove into REE-visible or TA-private buffers without robust bounds checks"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted input sizes/buffers propagate to memmove calls",
            "no comprehensive bounds checks on corresponding buffers"
          ],
          "attack_scenario": " attacker crafts REE-visible input to overflow or corrupt adjacent memory in TA or leak sensitive content",
          "impact": "potential information disclosure or memory corruption inside TA or REE boundary violations"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "input(): lines around 286-312",
          "recommendation": "validate all memref.size against actual buffer capacities before memmove, cap to safe max, check indices before access"
        },
        {
          "type": "sanitization",
          "location": "memmove destinations",
          "recommendation": "ensure destination buffers are sized appropriately for incoming data"
        },
        {
          "type": "memory_safety",
          "location": "common pattern in input()",
          "recommendation": "avoid unbounded / fixed-size copies from tainted sources"
        }
      ],
      "decision_rationales": [
        "per-line memmove operations mixing TA-private and REE-visible buffers with tainted data and insufficient bounds checks; high likelihood of memory-safety violations"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      }
    },
    {
      "vulnerability_id": "VULN-0014",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 291,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)"
      ],
      "rule_ids": [
        "shared_memory_overwrite"
      ],
      "descriptions": [
        "tainted source moved into private stack-like buffer with fixed length 1000"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "TA-originated data (params[].memref.buffer/size, str) in input()",
          "propagation_path": [
            "CAUTION: tainted data flows into TEE_MemMove calls at lines 290, 291, 306, 307, 309"
          ],
          "sink": "TEE_MemMove into REE-visible or TA-private buffers without robust bounds checks"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted input sizes/buffers propagate to memmove calls",
            "no comprehensive bounds checks on corresponding buffers"
          ],
          "attack_scenario": " attacker crafts REE-visible input to overflow or corrupt adjacent memory in TA or leak sensitive content",
          "impact": "potential information disclosure or memory corruption inside TA or REE boundary violations"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "input(): lines around 286-312",
          "recommendation": "validate all memref.size against actual buffer capacities before memmove, cap to safe max, check indices before access"
        },
        {
          "type": "sanitization",
          "location": "memmove destinations",
          "recommendation": "ensure destination buffers are sized appropriately for incoming data"
        },
        {
          "type": "memory_safety",
          "location": "common pattern in input()",
          "recommendation": "avoid unbounded / fixed-size copies from tainted sources"
        }
      ],
      "decision_rationales": [
        "per-line memmove operations mixing TA-private and REE-visible buffers with tainted data and insufficient bounds checks; high likelihood of memory-safety violations"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      }
    },
    {
      "vulnerability_id": "VULN-0015",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 306,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)"
      ],
      "rule_ids": [
        "shared_memory_overwrite"
      ],
      "descriptions": [
        "private str moved into REE-visible destination without explicit bounds checks"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "TA-originated data (params[].memref.buffer/size, str) in input()",
          "propagation_path": [
            "CAUTION: tainted data flows into TEE_MemMove calls at lines 290, 291, 306, 307, 309"
          ],
          "sink": "TEE_MemMove into REE-visible or TA-private buffers without robust bounds checks"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted input sizes/buffers propagate to memmove calls",
            "no comprehensive bounds checks on corresponding buffers"
          ],
          "attack_scenario": " attacker crafts REE-visible input to overflow or corrupt adjacent memory in TA or leak sensitive content",
          "impact": "potential information disclosure or memory corruption inside TA or REE boundary violations"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "input(): lines around 286-312",
          "recommendation": "validate all memref.size against actual buffer capacities before memmove, cap to safe max, check indices before access"
        },
        {
          "type": "sanitization",
          "location": "memmove destinations",
          "recommendation": "ensure destination buffers are sized appropriately for incoming data"
        },
        {
          "type": "memory_safety",
          "location": "common pattern in input()",
          "recommendation": "avoid unbounded / fixed-size copies from tainted sources"
        }
      ],
      "decision_rationales": [
        "per-line memmove operations mixing TA-private and REE-visible buffers with tainted data and insufficient bounds checks; high likelihood of memory-safety violations"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      }
    },
    {
      "vulnerability_id": "VULN-0016",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 307,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)"
      ],
      "rule_ids": [
        "shared_memory_overwrite"
      ],
      "descriptions": [
        "private str moved into REE-visible destination without explicit bounds checks"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "TA-originated data (params[].memref.buffer/size, str) in input()",
          "propagation_path": [
            "CAUTION: tainted data flows into TEE_MemMove calls at lines 290, 291, 306, 307, 309"
          ],
          "sink": "TEE_MemMove into REE-visible or TA-private buffers without robust bounds checks"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted input sizes/buffers propagate to memmove calls",
            "no comprehensive bounds checks on corresponding buffers"
          ],
          "attack_scenario": " attacker crafts REE-visible input to overflow or corrupt adjacent memory in TA or leak sensitive content",
          "impact": "potential information disclosure or memory corruption inside TA or REE boundary violations"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "input(): lines around 286-312",
          "recommendation": "validate all memref.size against actual buffer capacities before memmove, cap to safe max, check indices before access"
        },
        {
          "type": "sanitization",
          "location": "memmove destinations",
          "recommendation": "ensure destination buffers are sized appropriately for incoming data"
        },
        {
          "type": "memory_safety",
          "location": "common pattern in input()",
          "recommendation": "avoid unbounded / fixed-size copies from tainted sources"
        }
      ],
      "decision_rationales": [
        "per-line memmove operations mixing TA-private and REE-visible buffers with tainted data and insufficient bounds checks; high likelihood of memory-safety violations"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      }
    },
    {
      "vulnerability_id": "VULN-0017",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 309,
      "consolidated": true,
      "detection_count": 1,
      "severity": "high",
      "confidence_level": "high",
      "primary_vulnerability_type": "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-121/ CWE-125 family (out-of-bounds / improper memory handling in memmove usage)"
      ],
      "rule_ids": [
        "shared_memory_overwrite"
      ],
      "descriptions": [
        "REE-visible source copied into private str with length 1000"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "input",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "TA-originated data (params[].memref.buffer/size, str) in input()",
          "propagation_path": [
            "CAUTION: tainted data flows into TEE_MemMove calls at lines 290, 291, 306, 307, 309"
          ],
          "sink": "TEE_MemMove into REE-visible or TA-private buffers without robust bounds checks"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted input sizes/buffers propagate to memmove calls",
            "no comprehensive bounds checks on corresponding buffers"
          ],
          "attack_scenario": " attacker crafts REE-visible input to overflow or corrupt adjacent memory in TA or leak sensitive content",
          "impact": "potential information disclosure or memory corruption inside TA or REE boundary violations"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "input(): lines around 286-312",
          "recommendation": "validate all memref.size against actual buffer capacities before memmove, cap to safe max, check indices before access"
        },
        {
          "type": "sanitization",
          "location": "memmove destinations",
          "recommendation": "ensure destination buffers are sized appropriately for incoming data"
        },
        {
          "type": "memory_safety",
          "location": "common pattern in input()",
          "recommendation": "avoid unbounded / fixed-size copies from tainted sources"
        }
      ],
      "decision_rationales": [
        "per-line memmove operations mixing TA-private and REE-visible buffers with tainted data and insufficient bounds checks; high likelihood of memory-safety violations"
      ],
      "severity_distribution": {
        "high": 1
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      }
    },
    {
      "vulnerability_id": "VULN-0018",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 401,
      "consolidated": true,
      "detection_count": 1,
      "severity": "medium",
      "confidence_level": "medium",
      "primary_vulnerability_type": "CWE-125: Out-of-bounds Read/Write",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "vulnerability_types": [
        "CWE-125: Out-of-bounds Read/Write"
      ],
      "rule_ids": [
        "weak_input_validation"
      ],
      "descriptions": [
        "Copy from REE-visible memory into TA buffer without explicit bounds validation on the MemMove call"
      ],
      "chains": [
        [
          "TA_InvokeCommandEntryPoint",
          "shared_memory",
          "produce_s3",
          "TEE_MemMove"
        ]
      ],
      "taint_flow_summaries": [
        {
          "source": "REE-originated memref.buffer contents used as source for MemMove",
          "propagation_path": [
            "param_types check in shared_memory ensures memref type but not content sanitization @ file:/workspace/benchmark/bad-partitioning/ta/entry.c:357-359",
            "TEE_MemMove at file:/workspace/benchmark/bad-partitioning/ta/entry.c:401"
          ],
          "sink": "TEE_MemMove(str, params[0].memref.buffer, params[0].memref.size)"
        }
      ],
      "exploitation_analyses": [
        {
          "preconditions": [
            "tainted data from REE copied into TA-visible buffer without bounds checks"
          ],
          "attack_scenario": " attacker controls params[0].memref.buffer and size, leading to over-read/over-write in str",
          "impact": "possible information disclosure or memory corruption in TA"
        }
      ],
      "missing_mitigations": [
        {
          "type": "bounds_check",
          "location": "produce_s3/TEE_MemMove path",
          "recommendation": "validate that params[0].memref.size <= destination buffer length and ensure proper sanitization before copy"
        }
      ],
      "decision_rationales": [
        "Memory-safety risk from unverified size against REE-visible source in a direct memory copy"
      ],
      "severity_distribution": {
        "medium": 1
      },
      "rule_distribution": {
        "weak_input_validation": 1
      }
    }
  ],
  "total_finding_lines": 38,
  "structural_risks": [
    {
      "finding_id": "RISK-0001",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 116,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "produce_2",
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "TEe_MemMove writes into REE-visible buffer from tainted source",
        "memmove into REE-visible destination from tainted source with length derived from strlen(key2); potential bounds risk"
      ],
      "code_excerpts": [
        "TEE_MemMove(params[1].memref.buffer, key2, strlen(key2));"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=6,src_sz=6,dst_sz=params[1].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0002",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 117,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "produce_2",
        "snprintf"
      ],
      "sink_functions": [
        "array_write"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "snprintf into REE-visible buffer with length derived from tainted parameter",
        "write into REE-visible buffer using format from constant key2 with tainted destination length"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s\", key2);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?:params[2].memref.size",
          "size_triplet:copy_len=6,src_sz=6,dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0003",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 121,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "produce_2",
        "snprintf"
      ],
      "sink_functions": [
        "array_write"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "snprintf into REE-visible buffer with tainted length",
        "write into REE-visible buffer using composite format with tainted/non-tainted parts; potential bounds issue"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s\", key2, vi);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=...",
          "size_triplet:copy_len=6+3,src_sz=6,dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0004",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 122,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "produce_2",
        "snprintf"
      ],
      "sink_functions": [
        "array_write"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "additional write into REE-visible buffer with tainted length",
        "write into REE-visible buffer with additional %d component; potential bounds issue"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s-%d\", key2, vi, v);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=...,src_sz=?,dst_sz=?",
          "size_triplet:copy_len=6+3+2,src_sz=6,dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0005",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 125,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "produce_2",
        "snprintf"
      ],
      "sink_functions": [
        "array_write"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "write into REE-visible buffer with potential tainted length",
        "write into REE-visible buffer using key2 only; potential bounds issue"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s\", key2);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=...,src_sz=?,dst_sz=?",
          "size_triplet:copy_len=6,src_sz=6,dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0006",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 126,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "produce_2",
        "snprintf"
      ],
      "sink_functions": [
        "array_write"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "second write into REE-visible buffer with tainted length",
        "write into REE-visible buffer using key2/vi; potential bounds issue"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s\", key2, vi);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=...,src_sz=?,dst_sz=?",
          "size_triplet:copy_len=6+3,src_sz=6,dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0007",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 136,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "produce",
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "TEE_MemMove writes into a REE-visible buffer using a tainted source buffer; potential mismatch between source/destination sizes",
        "memmove into REE-visible destination from tainted source with length derived from strlen(key1); potential bounds risk",
        "tainted source buffer copied into REE-visible destination without explicit bounds reasoning"
      ],
      "code_excerpts": [
        "TEE_MemMove(params[1].memref.buffer, key1, strlen(key1));"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=6,src_sz=6,dst_sz=params[1].memref.size",
          "src_region:TEE-private"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0008",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 137,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "produce",
        "snprintf"
      ],
      "sink_functions": [
        "array_write",
        "snprintf"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "snprintf writes into REE-visible buffer with length derived from tainted parameter; potential bounds issue",
        "writing into REE-visible memory using a formatted string derived from tainted input; potential bounds issue"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s\", key1);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=6,src_sz=6,dst_sz=params[2].memref.size",
          "src_region:unknown",
          "size_triplet:copy_len= strlen(key1),src_sz= strlen(key1),dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0009",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 143,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "concatenation of formatted string into REE-visible buffer with tainted components; potential overflow risk"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s\", key1, vi);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:unknown",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len= strlen(\"%s-%s\" ),src_sz= strlen(key1+vi),dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0010",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 144,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "second snprintf in same statement sequence with tainted source; bounds uncertainty"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s-%d\", key1, vi, v);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:unknown",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len= strlen(\"%s-%s-%d\" ),src_sz= strlen(key1+vi+v),dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0011",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 147,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "formatting into REE buffer from tainted source after enc(key1); potential bounds issue"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s\", key1);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:unknown",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len= strlen(key1),src_sz= strlen(key1),dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0012",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 149,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "subsequent snprintf into same REE buffer after additional formatting; bounds risk remains"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s\", key1, vi);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:unknown",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len= strlen(key1),src_sz= strlen(key1),dst_sz=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0013",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 154,
      "consolidated": true,
      "detection_count": 2,
      "primary_rule": "weak_input_validation",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "weak_input_validation",
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "memmove into a TA-private local buffer from a local key; potential bounds issue if size not properly bounded",
        "callee receives local buffer as destination; potential aliasing with REE-visible buffers without explicit bounds checks",
        "copy from local source into REE-visible destination buffer without explicit bounds reasoning"
      ],
      "code_excerpts": [
        "TEE_MemMove(buf, key, strlen(key));"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation",
          "other"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:unknown",
          "dst_region:TEE-private",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=...",
          "src_region:REE-private",
          "dst_region:REE-visible",
          "size_triplet:copy_len=4,src_sz=4,dst_sz=?",
          "src_region:REE-visible",
          "size_triplet:copy_len=6,src_sz=1000,dst_sz=size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0014",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 155,
      "consolidated": true,
      "detection_count": 2,
      "primary_rule": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "weak_input_validation",
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "formatting from key into buf; potential bounds issue before enc(key1)",
        "tainted input (buf) written into REE-visible buffer via snprintf; potential boundary/format risks"
      ],
      "code_excerpts": [
        "snprintf(buf, size, \"%s\", key);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation",
          "other"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:unknown",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len= strlen(key),src_sz= strlen(key),dst_sz=params[2].memref.size",
          "src_region:REE-visible",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0015",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 175,
      "consolidated": true,
      "detection_count": 2,
      "primary_rule": "other",
      "functions": [
        "output",
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "other",
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "callee writes into REE-visible buffer via memmove using a tainted source length; potential buffer exposure without explicit bounds reasoning",
        "memmove into REE-visible destination from tainted source key; bounds unknown if key length varies",
        "data flows from TA-private source (key) to a REE-visible destination without explicit bounds reasoning on the copy length"
      ],
      "code_excerpts": [
        "TEE_MemMove(params[1].memref.buffer, key, strlen(key));"
      ],
      "rule_matches": {
        "rule_id": [
          "other",
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?",
          "size_triplet:copy_len=6,src_sz=6,dst_sz=params[1].memref.size",
          "src_region:TEE-private",
          "sensitivity_label:private"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0016",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 176,
      "consolidated": true,
      "detection_count": 2,
      "primary_rule": "weak_input_validation",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "weak_input_validation",
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "repeat of snprintf after MemMove towards end; potential cumulative bounds risk",
        "tainted input (buf) written into REE-visible buffer via snprintf; potential boundary/format risks",
        "destination REE-visible buffer written via snprintf using a source from REE boundaries (key from local scope) without explicit bounds reasoning on the same path"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s\", key);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation",
          "other"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:unknown",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len= strlen(key),src_sz= strlen(key),dst_sz=params[2].memref.size",
          "src_region:REE-visible",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0017",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 184,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "other",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted input (key/vi) used in snprintf into REE-visible buffer; potential boundary/format risks",
        "destination REE-visible buffer written via snprintf with format including additional data from local variables (key, vi) without explicit bounds checks on same path"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s\", key, vi);"
      ],
      "rule_matches": {
        "rule_id": [
          "other"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0018",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 185,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "other",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted input (key/vi) used in snprintf into REE-visible buffer; potential boundary/format risks",
        "destination REE-visible buffer written via snprintf with additional data on same call-site; potential unbounded write depending on REE-provided size"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s-%d\", key, vi, v);"
      ],
      "rule_matches": {
        "rule_id": [
          "other"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0019",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 189,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "other",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted input (key) used in snprintf into REE-visible buffer; potential boundary/format risks",
        "destination REE-visible buffer written via snprintf after key encoding; potential data exposure with REE-provided size"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s\", key);"
      ],
      "rule_matches": {
        "rule_id": [
          "other"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0020",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 190,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "other",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted input (key/vi) used in snprintf into REE-visible buffer; potential boundary/format risks",
        "destination REE-visible buffer written via snprintf with encoded key and tail; potential bounds ambiguity on same path"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s\", key, vi);"
      ],
      "rule_matches": {
        "rule_id": [
          "other"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0021",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 191,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "other",
      "functions": [
        "snprintf"
      ],
      "sink_functions": [
        "snprintf"
      ],
      "rules": [
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted input (key/vi) used in snprintf into REE-visible buffer; potential boundary/format risks",
        "destination REE-visible buffer written via snprintf with composite data; potential copy without explicit sanitization on same path"
      ],
      "code_excerpts": [
        "snprintf(params[2].memref.buffer, params[2].memref.size, \"%s-%s-%d\", key, vi, v);"
      ],
      "rule_matches": {
        "rule_id": [
          "other"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0022",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 204,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "array_write"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted per-byte write into local TA-private buffer str from tainted buf2"
      ],
      "code_excerpts": [
        "str[i] = ((char *)buf2)[i];"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "TA->REE",
          "REE-visible",
          "TEE-private",
          "unknown",
          "copy_len=size2"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0023",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 208,
      "consolidated": true,
      "detection_count": 3,
      "primary_rule": "weak_input_validation",
      "functions": [
        "TEE_MemMove",
        "produce_i2"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "weak_input_validation",
        "other",
        "shared_memory_overwrite"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "memmove from TA-private str to TA-private memref; potential bounds issue when size is parameterized",
        "multiple memmove operations into REE-visible buffers without explicit per-call bounds reasoning",
        "tainted private buffer str copied into REE-visible destination buf3 via MMove",
        "tainted TA-private buffer str copied to REE-visible buffer at params[3].memref.buffer"
      ],
      "code_excerpts": [
        "TEE_MemMove(str, params[3].memref.buffer, params[3].memref.size);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation",
          "other",
          "shared_memory_overwrite"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:TEE-private",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?",
          "src_region:REE-visible",
          "TA->REE",
          "TEE-private",
          "REE-visible",
          "unknown",
          "copy_len=size3"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1,
        "weak_input_validation": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0024",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 212,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "shared_memory_overwrite",
      "functions": [
        "produce_i2",
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "shared_memory_overwrite"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted private buffer str copied into REE-visible destination buf2 via MMove",
        "tainted TA-private buffer str copied to REE-visible buffer params[2].memref.buffer"
      ],
      "code_excerpts": [
        "TEE_MemMove(str, params[2].memref.buffer, params[2].memref.size);"
      ],
      "rule_matches": {
        "rule_id": [
          "shared_memory_overwrite"
        ],
        "others": [
          "TA->REE",
          "TEE-private",
          "REE-visible",
          "unknown",
          "copy_len=size2"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0025",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 224,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "produce_i0",
        "produce_i2"
      ],
      "sink_functions": [
        "array_write"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted source (params[2].memref.buffer) used in per-byte copy into local buffer str",
        "tainted source (buf2) used to write per-byte into local private buffer str"
      ],
      "code_excerpts": [
        "str[i] = ((char *)buf2)[i];"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "REE->TA",
          "REE-visible",
          "unknown",
          "copy_len=params[1].memref.size",
          "TA->REE",
          "TEE-private",
          "copy_len=size2"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0026",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 227,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "shared_memory_overwrite",
      "functions": [
        "produce_i0",
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "shared_memory_overwrite"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "TA-private buffer str overwritten/destined memory written into REE-visible buffer buf3 via MMove with tainted size",
        "tainted size3 used to copy into REE-visible destination buf3 from private str; potential in-place overwrite via unvalidated length"
      ],
      "code_excerpts": [
        "TEE_MemMove(str, buf3, size3);"
      ],
      "rule_matches": {
        "rule_id": [
          "shared_memory_overwrite"
        ],
        "others": [
          "TA->REE",
          "TA-private",
          "REE-visible",
          "unknown",
          "copy_len=size3",
          "TEE-private"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0027",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 238,
      "consolidated": true,
      "detection_count": 2,
      "primary_rule": "other",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "other",
        "shared_memory_overwrite"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "consecutive memmove calls into the same destination could race on bounds without checks",
        "tainted TA-private buffer str copied to REE-visible buffer buf2",
        "tainted size2 used to copy from local str to REE-visible buf2; potential out-of-bounds if size2 exceeds buf2 capacity"
      ],
      "code_excerpts": [
        "TEE_MemMove(str, buf2, size2);"
      ],
      "rule_matches": {
        "rule_id": [
          "other",
          "shared_memory_overwrite"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:REE-visible",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?",
          "TA->REE",
          "TEE-private",
          "REE-visible",
          "unknown",
          "copy_len=size2",
          "TA-private"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0028",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 239,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "shared_memory_overwrite",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "shared_memory_overwrite"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted TA-private buffer str copied to REE-visible buffer buf3",
        "tainted size3 used to copy from private str to REE-visible buf3; potential overwrite on destination"
      ],
      "code_excerpts": [
        "TEE_MemMove(str, buf3, size3);"
      ],
      "rule_matches": {
        "rule_id": [
          "shared_memory_overwrite"
        ],
        "others": [
          "TA->REE",
          "TEE-private",
          "REE-visible",
          "unknown",
          "copy_len=size3"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0029",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 246,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "shared_memory_overwrite",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "shared_memory_overwrite"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted REE-visible buffer buf2 used as destination for copy from local str",
        "tainted 1000-length copy from buf2 to str; potential overwrite of local str buffer"
      ],
      "code_excerpts": [
        "TEE_MemMove(buf2, str, 1000);"
      ],
      "rule_matches": {
        "rule_id": [
          "shared_memory_overwrite"
        ],
        "others": [
          "TA->REE",
          "REE-visible",
          "TEE-private",
          "unknown",
          "copy_len=1000"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0030",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 287,
      "consolidated": true,
      "detection_count": 2,
      "primary_rule": "weak_input_validation",
      "functions": [
        "input"
      ],
      "sink_functions": [
        "array_write",
        "="
      ],
      "rules": [
        "weak_input_validation",
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted source (params[2].memref.size) written byte-by-byte into a local private buffer str",
        "bindings of callee parameters with origin regions"
      ],
      "code_excerpts": [
        "str[i] = ((char *)params[2].memref.buffer)[i];"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation",
          "other"
        ],
        "others": [
          "TA->REE",
          "TEE-private",
          "unknown",
          "copy_len=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0031",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 290,
      "consolidated": true,
      "detection_count": 3,
      "primary_rule": "weak_input_validation",
      "functions": [
        "TEE_MemMove",
        "input"
      ],
      "sink_functions": [
        "TEE_MemMove",
        "="
      ],
      "rules": [
        "weak_input_validation",
        "shared_memory_overwrite",
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "copy from TA-private buffer to REE-visible memref; size taken from memref.size",
        "tainted length/destination interaction: copying from private str into REE-visible destination via a TA-MemMove",
        "bindings of callee parameters with origin regions",
        "tainted REE-visible buffer params[3].memref.buffer used as destination for copy from local str",
        "tainted size3 used to copy into REE-visible params[3].memref.buffer; potential bounds issue",
        "tainted source (str) used as destination in a memory move into REE-visible buffer without explicit bounds checks on the same path"
      ],
      "code_excerpts": [
        "TEE_MemMove(params[2].memref.buffer, str, 1000);",
        "TEE_MemMove(str, params[3].memref.buffer, params[3].memref.size);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation",
          "shared_memory_overwrite",
          "other"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:TA-private",
          "dst_region:REE-visible",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?",
          "TA->REE",
          "TEE-private",
          "REE-visible",
          "unknown",
          "copy_len=params[3].memref.size",
          "copy_len=size3"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1,
        "weak_input_validation": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0032",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 291,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "shared_memory_overwrite",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "shared_memory_overwrite"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted REE-visible buffer params[2].memref.buffer used as destination for copy from local str",
        "tainted source (params[2].memref.buffer) used as destination in a memory move into local str without bounds protection on the same path"
      ],
      "code_excerpts": [
        "TEE_MemMove(params[2].memref.buffer, str, 1000);"
      ],
      "rule_matches": {
        "rule_id": [
          "shared_memory_overwrite"
        ],
        "others": [
          "TA->REE",
          "REE-visible",
          "TEE-private",
          "unknown",
          "copy_len=1000"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0033",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 306,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "shared_memory_overwrite",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "shared_memory_overwrite"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted source (params[2].memref.buffer) used as destination in a memory move into REE-visible str without bounds checks on the same path",
        "tainted destination (params[2].memref.buffer) written into by source str with no explicit bounds checks on the path"
      ],
      "code_excerpts": [
        "TEE_MemMove(str, params[2].memref.buffer, params[2].memref.size);"
      ],
      "rule_matches": {
        "rule_id": [
          "shared_memory_overwrite"
        ],
        "others": [
          "unknown",
          "copy_len=params[2].memref.size"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0034",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 309,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "shared_memory_overwrite",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "shared_memory_overwrite"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "tainted destination (params[2].memref.buffer) overwritten by constant-size move (1000) via str in same path"
      ],
      "code_excerpts": [
        "TEE_MemMove(params[2].memref.buffer, str, 1000);"
      ],
      "rule_matches": {
        "rule_id": [
          "shared_memory_overwrite"
        ],
        "others": [
          "unknown",
          "copy_len=1000"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0035",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 350,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "other",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "="
      ],
      "rules": [
        "other"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "TA-tainted source buffer (buf) passed into a callee copying into a local TA buffer (str) without explicit sanitizer on the copy path"
      ],
      "code_excerpts": [
        "TEE_MemMove(str, buf, size);"
      ],
      "rule_matches": {
        "rule_id": [
          "other"
        ],
        "others": [
          "flow_dir:REE->TA",
          "src_region:REE-visible",
          "dst_region:TEE-private",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0036",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 391,
      "consolidated": true,
      "detection_count": 1,
      "primary_rule": "weak_input_validation",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "TEE_MemMove"
      ],
      "rules": [
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "potential unsafe memmove with size derived from runtime value"
      ],
      "code_excerpts": [
        "TEE_MemMove(params[0].memref.buffer, params[0].memref.buffer, params[0].memref.size);"
      ],
      "rule_matches": {
        "rule_id": [
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:TA->REE",
          "src_region:unknown",
          "dst_region:unknown",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=1000,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0037",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 401,
      "consolidated": true,
      "detection_count": 2,
      "primary_rule": "other",
      "functions": [
        "TEE_MemMove"
      ],
      "sink_functions": [
        "="
      ],
      "rules": [
        "other",
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "TA-tainted source buffer (params[0].memref.buffer) passed into a callee copying into a local TA buffer (str) without explicit sanitizer on the copy path",
        "Copy from REE-visible buffer into a TA buffer without explicit per-call bounds sanitization beyond the implicit size parameter"
      ],
      "code_excerpts": [
        "TEE_MemMove(str, params[0].memref.buffer, params[0].memref.size);"
      ],
      "rule_matches": {
        "rule_id": [
          "other",
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:REE->TA",
          "src_region:REE-visible",
          "dst_region:TEE-private",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?"
        ]
      },
      "rule_distribution": {
        "weak_input_validation": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    },
    {
      "finding_id": "RISK-0038",
      "file": "/workspace/benchmark/bad-partitioning/ta/entry.c",
      "line": 485,
      "consolidated": true,
      "detection_count": 3,
      "primary_rule": "shared_memory_overwrite",
      "functions": [
        "shared_memory",
        "TEE_MemMove"
      ],
      "sink_functions": [
        "="
      ],
      "rules": [
        "shared_memory_overwrite",
        "other",
        "weak_input_validation"
      ],
      "phases": [
        "unknown"
      ],
      "descriptions": [
        "In-place modification of a REE-visible buffer via tainted pointer (dec(buf)) with no explicit bounds check on that path",
        "TA-tainted source buffer (params[0].memref.buffer) passed into a callee copying into a local TA buffer (str) without explicit sanitizer on the copy path",
        "Second MemMove with REE-visible source into TA buffer without additional bounds checks beyond prior guard",
        "Binding of destination pointer (str) to TA-private origin with data coming from REE; potential risk if later leakage occurs",
        "Binding of source pointer (params[0].memref.buffer) to REE-visible origin; data is read from REE into TA-private buffer"
      ],
      "code_excerpts": [
        "TEE_MemMove(str, params[0].memref.buffer, params[0].memref.size);"
      ],
      "rule_matches": {
        "rule_id": [
          "shared_memory_overwrite",
          "other",
          "weak_input_validation"
        ],
        "others": [
          "flow_dir:REE->TA",
          "src_region:REE-visible",
          "dst_region:unknown",
          "sensitivity_label:unknown",
          "size_triplet:copy_len=?,src_sz=?,dst_sz=?",
          "dst_region:TEE-private"
        ]
      },
      "rule_distribution": {
        "shared_memory_overwrite": 1,
        "weak_input_validation": 1,
        "other": 1
      },
      "phase_distribution": {
        "unknown": 1
      }
    }
  ]
}