# src/analyze_vulnerabilities/prompts.py
# !/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
prompts.py - LLMプロンプトテンプレート
"""

START_PROMPT_TEMPLATE = """As a program analyst, I give you snippets of C code generated by decompilation, using <{source_function}> as the taint source, and the <{param_name}> parameter marked as the taint label to extract the taint data flow. Pay attention to the data alias and tainted data operations. Output in the form of data flows.
{code}
"""

MIDDLE_PROMPT_TEMPLATE = """Continue to analyze function according to the above taint analysis results. Pay attention to the data alias and tainted data operations. (Note the new taint source <{source_function}> and the <{param_name}> parameter marked as the taint label.)
{code}
"""

END_PROMPT_TEMPLATE = """Based on the above taint analysis results, analyze whether the code has vulnerabilities. If there is a vulnerability, please explain what kind of vulnerability according to CWE.
"""

def get_start_prompt(source_function: str, param_name: str, code: str) -> str:
    """スタートプロンプトを生成"""
    return START_PROMPT_TEMPLATE.format(
        source_function=source_function,
        param_name=param_name,
        code=code
    )

def get_middle_prompt(source_function: str, param_name: str, code: str) -> str:
    """中間プロンプトを生成"""
    return MIDDLE_PROMPT_TEMPLATE.format(
        source_function=source_function,
        param_name=param_name,
        code=code
    )

def get_end_prompt(taint_summary: str) -> str:
    """エンドプロンプトを生成"""
    return END_PROMPT_TEMPLATE.format(
        taint_summary=taint_summary
    )